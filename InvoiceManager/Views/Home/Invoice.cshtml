@model InvoiceManager.Models.ViewModels.EditInvoiceViewModel

@{
    ViewBag.Title = Model.Heading;
}

<h2 class="mb-3">@Model.Heading</h2>

@if (Model.Invoice.Id != 0)
{
    <button class="btn btn-primary mb-3"
            onclick='window.location.href = "@Url.Action("InovicePosition", "Home", new {invoiceId = Model.Invoice.Id})"'>
        Add Invoice Item
    </button>
    <button class="btn btn-secondary mb-3" onclick="generatePdf()">Generate PDF</button>
}
else
{
    <div class="row">
        <div class="col-lg-6">
            @using (Html.BeginForm("Invoice", "Home"))
            {
                if (Model.Invoice.Id == 0)
                {
                    <p class="alert, alert-info mt-4 mb-4">
                        Title, client, payment method and deadline are <strong>required</strong>.
                    </p>

                    @Html.HiddenFor(x => x.Invoice.Id)
                    @Html.HiddenFor(x => x.Invoice.User.Id)
                    @Html.HiddenFor(x => x.Invoice.CreatedDate)

                    <div class="form-group">
                        @Html.LabelFor(x => x.Invoice.Title)
                        @Html.TextBoxFor(x => x.Invoice.Title, new { @class = "form-control", autofocus = "autofocus" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Invoice.CliendId)
                        @Html.DropDownListFor(x => x.Invoice.CliendId,
                            new SelectList(Model.Clients, "Id", "Name"),  "-- Select Client --",
                                new { @class = "form-control" })
                    </div>

                    if (Model.Invoice.Id != 0)
                    {
                        <div class="form-group">
                            @Html.LabelFor(x => x.Invoice.Value)
                            @Html.TextBoxFor(x => x.Invoice.Value, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    }

                    <div class="form-group">
                        @Html.LabelFor(x => x.Invoice.PaymentMethodId)
                        @Html.DropDownListFor(x => x.Invoice.CliendId,
                            new SelectList(Model.MethodOfPayments, "Id", "Name"), "-- Select Payment Method -- ",
                                new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Invoice.PaymentDate)
                        @Html.TextBoxFor(x => x.Invoice.PaymentDate, "{0:dd-MM-yyyy}", new { @class = "form-control", @id="PaymentDate", autocomplete="odd"})
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Invoice.Comments)
                        @Html.TextAreaFor(x => x.Invoice.Comments, new { @class = "form-control" })
                    </div>

                    <button type="submit" class="btn btn-primary btn-lg mb-5">
                        Save
                    </button>
                }
            }
        </div>
        <div class="col-lg-5 offset-lg-1">
            @if (Model.Invoice.Id != 0)
            {
                @Html.Partial("_InvoicePosition", Model.Invoice.InvoicePositions)
            }
        </div>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        function generatePdf() {

        }

        $(document).ready(function() {
            $('#PaymentDate').datepicker({
                format: 'dd-MM-yyyy',
                language: "en",
                multidate: false,
                autoclose: true,
                todayHighlight: true,
                forceParse: false
            });
        });
    </script>
}